# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    #parameter_name: value

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    DropBundle\:
        resource: '../../src/DropBundle'
        exclude: '../../src/DropBundle/{Entity,Repository}'
        public: false

    DropBundle\Repository\OrdRepository:
        class: DropBundle\Repository\OrdRepository
        factory: 'doctrine.orm.entity_manager:getRepository'
        arguments: ['DropBundle\Entity\Ord']

    DropBundle\Form\Type\OrderClientType:
        class: DropBundle\Form\Type\OrderClientType
        arguments:
            - '@DropBundle\Services\NewPostAddressManager' # this is the ID of the service you want to inject
        public: true

    DropBundle\Doctrine\HashPasswordListener:
        class: DropBundle\Doctrine\HashPasswordListener
        autowire: true
        tags:
            - { name: doctrine.event_subscriber }

    TechBlogBundle\DataFixtures\Provider\CategoryProvider:
        class: DropBundle\DataFixtures\Provider\CategoryProvider
        arguments: ["@hautelook_alice.faker"]
        tags:
            - { name: hautelook_alice.faker.provider }

    DropBundle\Services\NewPostAddressProvider:
        public: true